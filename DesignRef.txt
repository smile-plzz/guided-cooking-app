Guided Cooking App - Design Guideline

This document outlines the design principles and guidelines for the Guided Cooking App, now primarily focused on the React client. It emphasizes a minimalist aesthetic, fluid user experience, and accessibility, building upon existing implementations while ensuring consistency, usability, and performance optimization.

1. Design Principles





Minimalist Design: Prioritize simplicity with clean lines, uncluttered layouts, and a focus on essential elements.



Fluid User Experience: Ensure seamless navigation and intuitive interactions across all features.



User-Centered Design: Design with the user in mind, catering to diverse needs, including novice cooks and those with accessibility requirements.



Accessibility: Adhere to WCAG 2.1 guidelines for color contrast, keyboard navigation, and screen reader compatibility.



Consistency: Maintain uniformity in visual and interactive elements across the application.



Performance Optimization: Optimize assets and animations to ensure fast load times and smooth performance.



Usability: Simplify workflows to reduce cognitive load and enhance user satisfaction.

2. Typography

Unified Font





Primary Font: Inter (sans-serif, clean, modern, highly legible)





Weights:





Regular (400) for body text



Medium (500) for secondary headers and emphasized text



Bold (700) for primary headers and call-to-action buttons



Sizes:





Headings:





H1: 32px (responsive: 24px on mobile)



H2: 24px (responsive: 20px)



H3: 20px (responsive: 18px)



Body: 16px (responsive: 14px)



Captions/Labels: 14px (responsive: 12px)



Line Height: 1.5 for body text, 1.2 for headings to ensure readability.



Letter Spacing: 0.5px for body text, 1px for headings to enhance clarity.

Typography Guidelines





Use sentence case for all text (e.g., "Add recipe" instead of "Add Recipe") to maintain a friendly tone.



Limit font styles to Inter to ensure consistency.



Avoid excessive bolding or underlining; use sparingly for emphasis.



Ensure text contrast meets WCAG 2.1 AA standards (minimum contrast ratio of 4.5:1 for normal text, 3:1 for large text).

3. Color Palette





Primary Colors:





Primary: #2E7D32 (Green, for CTAs and highlights)



Secondary: #F5F5F5 (Light gray, for backgrounds)



Accent Colors:





Accent 1: #FFB300 (Amber, for warnings or highlights)



Accent 2: #0288D1 (Blue, for links or secondary actions)



Neutral Colors:





Background: #FFFFFF (White)



Text: #212121 (Dark gray)



Secondary Text: #757575 (Medium gray)



Glassmorphism:





Background: rgba(255, 255, 255, 0.1)



Blur: backdrop-filter: blur(10px)



Border: 1px solid rgba(255, 255, 255, 0.2)



Neumorphism:





Shadows: Soft shadows (e.g., box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.1), -4px -4px 8px rgba(255, 255, 255, 0.5)) for buttons and badges.

Color Usage





Use primary green for buttons, active states, and key interactions.



Use neutral colors for backgrounds and text to maintain a clean, minimalist look.



Apply glassmorphism for overlays (e.g., Navbar, modals) and neumorphism for tactile elements (e.g., badges, buttons).



Ensure all color combinations meet WCAG 2.1 contrast requirements.

4. Layout & Alignment





Grid System: Use a 12-column responsive grid for consistent alignment.





Desktop: 1200px max-width, centered with 16px gutters.



Tablet: 768px max-width, 12px gutters.



Mobile: 100% width, 8px gutters.



Spacing:





Use a 8px spacing scale (8px, 16px, 24px, 32px, etc.) for margins and padding.



Maintain generous whitespace to reduce visual clutter and enhance focus.



Alignment:





Left-align text for readability, except for centered headings in hero sections.



Use consistent padding (16px for desktop, 12px for mobile) within components.



Responsive Design:





Use relative units (%, vw, vh, rem, em) for scalability.



Implement media queries for breakpoints at 576px (mobile), 768px (tablet), and 1200px (desktop).

5. Microinteractions & Transitions

Microinteractions





Hover Effects:





Buttons: Scale up by 1.05x with a 0.2s ease-in-out transition.



Links: Subtle underline animation (e.g., background-size transition from 0 to 100%).



Recipe Cards: Gentle elevation (translateY(-4px)) with a soft shadow.



Tap/Click Animations:





Buttons: Bounce effect using Framer Motion (scale: 0.95 on tap).



Favorite Button: Heart icon scales up to 1.2x and pulses briefly.



Loading States:





Skeleton shimmer effect for recipe cards and images (linear gradient animation).



Spinner for async operations (e.g., fetching recipes) with a smooth rotation.

Smooth Transitions





Framer Motion:





Use Framer Motion for all animations to ensure smooth, hardware-accelerated transitions.



Example: Parallax effect on recipe hero image (useScroll and useTransform for subtle movement).



Modal transitions: Fade-in (opacity: 0 → 1) and slide-up (y: 20px → 0) with 0.3s duration.



Transition Properties:





Use ease-in-out for most transitions to ensure natural movement.



Duration: 0.2s–0.3s for hover/tap, 0.5s for modals and page transitions.



Avoid overly long animations to maintain performance.

6. Glassmorphism & Neumorphism





Glassmorphism:





Apply to Navbar, modals, and overlays for a frosted-glass effect.



Properties: backdrop-filter: blur(10px), background: rgba(255, 255, 255, 0.1), border: 1px solid rgba(255, 255, 255, 0.2).



Use sparingly to avoid visual clutter; ensure sufficient contrast for text readability.



Neumorphism:





Apply to buttons, badges, and toggles for a soft, tactile feel.



Properties: Dual shadows (box-shadow: 4px 4px 8px rgba(0, 0, 0, 0.1), -4px -4px 8px rgba(255, 255, 255, 0.5)).



Use for interactive elements to create a "pressed" or "raised" effect.

7. Component-Specific Guidelines

Navbar





Design:





Fixed at the top with glassmorphism (semi-transparent, blurred background).



Logo: Bold Inter (700 weight), 24px, with a 1.05x scale hover animation.



Links: Medium Inter (500 weight), 16px, with underline animation on hover.



Search Bar: Rounded (8px border-radius), expands on focus (width: 200px → 300px).



Filter Dropdowns: Rounded (6px border-radius), with smooth opacity transition on open.



Dark Mode Toggle: Sun/moon icons with a 0.3s rotation animation.



Accessibility:





Keyboard-navigable links and dropdowns.



ARIA labels for search bar (aria-label="Search recipes") and toggle (aria-label="Toggle dark mode").

Recipe Cards (RecipeList.js)





Design:





Responsive grid (3 columns on desktop, 2 on tablet, 1 on mobile).



Glassmorphism background with subtle border highlights.



Hover: Elevate (translateY(-4px)) with increased shadow opacity.



Loading: Skeleton shimmer effect (linear gradient, 1.5s infinite animation).



Accessibility:





Alt text for images (alt="Recipe: [Recipe Name]").



Keyboard-focusable cards with visible focus outline (2px solid #0288D1).

Active Filter Chips





Design:





Rounded (16px border-radius), with a subtle neumorphic shadow.



Remove button (×) scales up on hover (1.2x).



Fade-out animation when removed (0.2s).



Accessibility:





ARIA labels for remove buttons (aria-label="Remove [filter] filter").



High contrast for chip text and background.

Recipe Detail View





Hero Section:





Hero Image: Parallax effect with Framer Motion (useScroll, useTransform).



Title Overlay: Glassmorphism with bold Inter (700 weight, 32px).



Prep Time Badge: Neumorphic design with soft shadow.



Action Buttons:





Favorite: Heart icon with bounce animation on tap.



Substitute/Add to List: Scale animation (0.95x on tap).



Ingredients/Instructions:





Ingredients: List with "Substitute" buttons (neumorphic, 6px border-radius).



Instructions: Numbered steps with visual aids (images) aligned left.



Unit Toggle:





Dropdown with smooth opacity transition, neumorphic styling.



Custom Notes:





Textarea: Rounded (4px border-radius), with focus outline (2px solid #0288D1).



Accessibility:





ARIA labels for buttons (e.g., aria-label="Add to shopping list").



Ensure nutritional info and images have proper alt text.

Shopping List & Pantry





Design:





List-based layout with checkbox inputs (neumorphic styling).



Add/Remove buttons: Scale animation on tap, rounded (6px border-radius).



Glassmorphism background for the container.



Accessibility:





ARIA labels for checkboxes (aria-label="Check [ingredient]").



Keyboard-navigable add/remove buttons.

8. Accessibility





Color Contrast: Ensure all text meets WCAG 2.1 AA contrast ratios.



Keyboard Navigation: All interactive elements (buttons, links, dropdowns) must be focusable and operable via keyboard.



Screen Readers:





Use semantic HTML (e.g., <nav>, <main>, <section>).



Add ARIA labels and roles where necessary (e.g., role="dialog" for modals).



Focus Management:





Visible focus indicators (2px solid #0288D1) for all interactive elements.



Trap focus within modals using Framer Motion’s useFocusTrap.



Responsive Text: Use rem/em units to respect user-defined font sizes.

9. Performance Optimization





Image Optimization:





Use WebP format for recipe images.



Lazy-load images below the fold (loading="lazy").



Animation Performance:





Use GPU-accelerated properties (transform, opacity) for animations.



Limit simultaneous animations to avoid frame drops.



API Calls:





Cache Spoonacular API responses in local storage where possible (e.g., recipe details).



Debounce search input to reduce unnecessary API requests (300ms delay).



Bundle Size:





Minimize external dependencies; use CDN-hosted libraries (e.g., Framer Motion).



Code-split React components to reduce initial load time.

10. Design System





Component Library:





Create reusable components in client/src/components/common/ (e.g., Button, Card, Modal, Dropdown).



Use Tailwind CSS for consistent styling (e.g., bg-primary, text-secondary).



Style Tokens:





Define colors, spacing, and typography in client/src/styles/tokens.css.



Example:

:root {
  --primary: #2E7D32;
  --spacing-sm: 8px;
  --font-size-body: 16px;
}



Framer Motion Presets:





Define reusable animation variants in client/src/utils/motion.js.



Example:

export const buttonHover = {
  hover: { scale: 1.05, transition: { duration: 0.2, ease: "easeInOut" } },
  tap: { scale: 0.95 }
};

11. Unification Details





Consistent Styling:





Apply glassmorphism to all overlays (Navbar, modals) for a unified look.



Use neumorphism for interactive elements (buttons, badges) across components.



Consistent Interactions:





Standardize hover (1.05x scale) and tap (0.95x scale) animations across buttons.



Use the same transition timing (0.2s–0.3s) for all microinteractions.



Consistent Layout:





Use the 8px spacing scale across all components.



Maintain a 12-column grid for all layouts.